{
  "AMBIGUOUS_FIELD_NAME" : {
    "message" : [ "Field name %s is ambiguous and has %s matching fields in the struct." ],
    "sqlState" : "42000"
  },
  "DIVIDE_BY_ZERO" : {
    "message" : [ "divide by zero" ],
    "sqlState" : "22012"
  },
  "DUPLICATE_KEY" : {
    "message" : [ "Found duplicate keys '%s'" ],
    "sqlState" : "23000"
  },
  "GROUPING_COLUMN_MISMATCH" : {
    "message" : [ "Column of grouping (%s) can't be found in grouping columns %s" ],
    "sqlState" : "42000"
  },
  "GROUPING_ID_COLUMN_MISMATCH" : {
    "message" : [ "Columns of grouping_id (%s) does not match grouping columns (%s)" ],
    "sqlState" : "42000"
  },
  "GROUPING_SIZE_LIMIT_EXCEEDED" : {
    "message" : [ "Grouping sets size cannot be greater than %s" ]
  },
  "IF_PARTITION_NOT_EXISTS_UNSUPPORTED" : {
    "message" : [ "Cannot write, IF NOT EXISTS is not supported for table: %s" ]
  },
  "INCOMPARABLE_PIVOT_COLUMN" : {
    "message" : [ "Invalid pivot column '%s'. Pivot columns must be comparable." ],
    "sqlState" : "42000"
  },
  "INVALID_FIELD_NAME" : {
    "message" : [ "Field name %s is invalid: %s is not a struct." ],
    "sqlState" : "42000"
  },
  "INVALID_JSON_SCHEMA_MAPTYPE" : {
    "message" : [ "Input schema %s can only contain StringType as a key type for a MapType." ]
  },
  "MISSING_COLUMN" : {
    "message" : [ "cannot resolve '%s' given input columns: [%s]" ],
    "sqlState" : "42000"
  },
  "MISSING_STATIC_PARTITION_COLUMN" : {
    "message" : [ "Unknown static partition column: %s" ],
    "sqlState" : "42000"
  },
  "NON_LITERAL_PIVOT_VALUES" : {
    "message" : [ "Literal expressions required for pivot values, found '%s'" ],
    "sqlState" : "42000"
  },
  "NON_PARTITION_COLUMN" : {
    "message" : [ "PARTITION clause cannot contain a non-partition column name: %s" ],
    "sqlState" : "42000"
  },
  "PIVOT_VALUE_DATA_TYPE_MISMATCH" : {
    "message" : [ "Invalid pivot value '%s': value data type %s does not match pivot column data type %s" ],
    "sqlState" : "42000"
  },
  "SECOND_FUNCTION_ARGUMENT_NOT_INTEGER" : {
    "message" : [ "The second argument of '%s' function needs to be an integer." ],
    "sqlState" : "22023"
  },
  "UNABLE_TO_ACQUIRE_MEMORY" : {
    "message" : [ "Unable to acquire %s bytes of memory, got %s" ]
  },
  "WRITING_JOB_ABORTED" : {
    "message" : [ "Writing job aborted" ],
    "sqlState" : "40000"
  },
  "UNSUPPORTED_CHANGE_COLUMN" : {
    "message" : [ "Please add an implementation for a column change here" ],
    "sqlState" : "46110"
  },
  "LOGICAL_HINT_OPERATOR_NOT_REMOVE_DURING_ANALYSIS" : {
    "message" : [ "Internal error: logical hint operator should have been removed during analysis" ],
    "sqlState" : "42000"
  },
  "CAN_NOT_EVALUATE_EXPRESSION" : {
    "message" : [ "Cannot evaluate expression: %s: %s" ],
    "sqlState" : "42000"
  },
  "CAN_NOT_GENERATE_CODE_FOR_EXPRESSION" : {
    "message" : [ "Cannot generate code for expression: %s" ],
    "sqlState" : "42000"
  },
  "CAN_NOT_TERMINATE_GENERATOR" : {
    "message" : [ "Cannot terminate expression: %s" ],
    "sqlState" : "42000"
  },
  "CAST_CAUSE_OVERFLOW" : {
    "message" : [ "Casting %s to %s causes overflow" ],
    "sqlState" : "22018"
  },
  "CAN_NOT_CHANGE_DECIMAL_PRECISION" : {
    "message" : [ "%s cannot be represented as Decimal(%s, %s)." ],
    "sqlState" : "HY104"
  },
  "INVALID_INPUT_SYNTAX_FOR_NUMERIC" : {
    "message" : [ "invalid input syntax for type numeric: %s" ],
    "sqlState" : "42000"
  },
  "CAN_NOT_CAST_DATATYPE" : {
    "message" : [ "Cannot cast %s to %s." ],
    "sqlState" : "22018"
  },
  "CAN_NOT_PARSE_DECIMAL" : {
    "message" : [ "Cannot parse any decimal" ],
    "sqlState" : "42000"
  },
  "UNSUPPORTED_SIMPLESTRING_WITH_NODEID" : {
    "message" : [ "%s does not implement simpleStringWithNodeId" ],
    "sqlState" : "46110"
  },
  "UNSUPPORTED_DATATYPE" : {
    "message" : [ "Unsupported data type %s %s" ],
    "sqlState" : "46110"
  },
  "FAILED_EXECUTE_UDF" : {
    "message" : [ "Failed to execute user defined function (%s: (%s) => %s)" ],
    "sqlState" : "42000"
  },
  "INVALID_ARRAY_INDEX" : {
    "message" : [ "Invalid index: %s, numElements: %s" ]
  },
  "MAP_KEY_NOT_EXIST" : {
    "message" : [ "Key %s does not exist." ]
  },
  "ROW_FROM_CSV_PARSER_NOT_EXPECTED" : {
    "message" : [ "Expected one row from CSV parser." ],
    "sqlState" : "42000"
  }
}